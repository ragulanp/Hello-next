{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ragu\\\\Desktop\\\\Utvikling\\\\hello-next\\\\pages\\\\p\\\\[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Markdown from 'react-markdown';\n\nconst Post = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, __jsx(\"h1\", {\n  className: \"jsx-564909388\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }\n}, props.show.name), __jsx(\"p\", {\n  className: \"jsx-564909388\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }\n}, props.show.summary.replace(/<[/]?[pb]>/g, '')), props.show.image ? __jsx(\"img\", {\n  src: props.show.image.medium,\n  className: \"jsx-564909388\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 29\n  }\n}) : null, __jsx(\"div\", {\n  className: \"jsx-564909388\" + \" \" + \"markdown\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }\n}, __jsx(Markdown, {\n  source: `\n            This is our blog post.\n            Yes. We can have a [link](/link).\n            And we can have a title as well.\n            \n            ### This is a title\n            \n            And here's the content.\n            `,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }\n})), __jsx(_JSXStyle, {\n  id: \"564909388\",\n  __self: this\n}, \".markdown{font-family:'Arial';}.markdown a{-webkit-text-decoration:none;text-decoration:none;color:blue;}.markdown h3{margin:0;padding:0;text-transform:uppercase;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcUmFndVxcRGVza3RvcFxcVXR2aWtsaW5nXFxoZWxsby1uZXh0XFxwYWdlc1xccFxcW2lkXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzQm1CLEFBRzZCLEFBSUMsQUFLWixTQUNDLFVBQ2UsQ0FWN0Isd0JBV0EsTUFQZSxXQUNmIiwiZmlsZSI6IkM6XFxVc2Vyc1xcUmFndVxcRGVza3RvcFxcVXR2aWtsaW5nXFxoZWxsby1uZXh0XFxwYWdlc1xccFxcW2lkXS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMYXlvdXQgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9NeUxheW91dCc7XHJcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xyXG5pbXBvcnQgTWFya2Rvd24gZnJvbSAncmVhY3QtbWFya2Rvd24nO1xyXG5cclxuY29uc3QgUG9zdCA9IHByb3BzID0+IChcclxuICAgIDxMYXlvdXQ+XHJcbiAgICAgICAgPGgxPntwcm9wcy5zaG93Lm5hbWV9PC9oMT5cclxuICAgICAgICA8cD57cHJvcHMuc2hvdy5zdW1tYXJ5LnJlcGxhY2UoLzxbL10/W3BiXT4vZywgJycpfTwvcD5cclxuICAgICAgICB7cHJvcHMuc2hvdy5pbWFnZSA/IDxpbWcgc3JjPXtwcm9wcy5zaG93LmltYWdlLm1lZGl1bX0gLz4gOiBudWxsfVxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWFya2Rvd25cIj5cclxuICAgICAgICAgICAgPE1hcmtkb3duXHJcbiAgICAgICAgICAgIHNvdXJjZT17YFxyXG4gICAgICAgICAgICBUaGlzIGlzIG91ciBibG9nIHBvc3QuXHJcbiAgICAgICAgICAgIFllcy4gV2UgY2FuIGhhdmUgYSBbbGlua10oL2xpbmspLlxyXG4gICAgICAgICAgICBBbmQgd2UgY2FuIGhhdmUgYSB0aXRsZSBhcyB3ZWxsLlxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgIyMjIFRoaXMgaXMgYSB0aXRsZVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgQW5kIGhlcmUncyB0aGUgY29udGVudC5cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICA8L2Rpdj5cclxuPHN0eWxlIGpzeCBnbG9iYWw+e2BcclxuICAgIC5tYXJrZG93biB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICdBcmlhbCc7XHJcbiAgICB9XHJcblxyXG4gICAgLm1hcmtkb3duIGEge1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICBjb2xvcjogYmx1ZTtcclxuICAgIH1cclxuXHJcbiAgICAubWFya2Rvd24gaDMge1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICB9XHJcbmB9PC9zdHlsZT5cclxuICAgIDwvTGF5b3V0PlxyXG4pO1xyXG5cclxuUG9zdC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbihjb250ZXh0KSB7XHJcbiAgICBjb25zdCB7aWR9ID0gY29udGV4dC5xdWVyeTtcclxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovL2FwaS50dm1hemUuY29tL3Nob3dzLyR7aWR9YCk7XHJcbiAgICBjb25zdCBzaG93ID0gYXdhaXQgcmVzLmpzb24oKTtcclxuXHJcbiAgICBjb25zb2xlLmxvZyhgRmV0Y2hlZCBzaG93OiAke3Nob3cubmFtZX1gKTtcclxuXHJcbiAgICByZXR1cm4ge3Nob3d9O1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgUG9zdDsiXX0= */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Ragu\\\\\\\\Desktop\\\\\\\\Utvikling\\\\\\\\hello-next\\\\\\\\pages\\\\\\\\p\\\\\\\\[id].js */\"));\n\nPost.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n  console.log(`Fetched show: ${show.name}`);\n  return {\n    show\n  };\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/Ragu/Desktop/Utvikling/hello-next/pages/p/[id].js"],"names":["Layout","fetch","Markdown","Post","props","show","name","summary","replace","image","medium","getInitialProps","context","id","query","res","json","console","log"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IACd,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,KAAK,CAACC,IAAN,CAAWC,IAAhB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIF,KAAK,CAACC,IAAN,CAAWE,OAAX,CAAmBC,OAAnB,CAA2B,aAA3B,EAA0C,EAA1C,CAAJ,CAFJ,EAGKJ,KAAK,CAACC,IAAN,CAAWI,KAAX,GAAmB;AAAK,EAAA,GAAG,EAAEL,KAAK,CAACC,IAAN,CAAWI,KAAX,CAAiBC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAnB,GAA2D,IAHhE,EAII;AAAA,qCAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,QAAD;AACA,EAAA,MAAM,EAAG;;;;;;;;aADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CAJJ;AAAA;AAAA;AAAA,4/EADJ;;AAqCAP,IAAI,CAACQ,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC3C,QAAM;AAACC,IAAAA;AAAD,MAAOD,OAAO,CAACE,KAArB;AACA,QAAMC,GAAG,GAAG,MAAMd,KAAK,CAAE,gCAA+BY,EAAG,EAApC,CAAvB;AACA,QAAMR,IAAI,GAAG,MAAMU,GAAG,CAACC,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBb,IAAI,CAACC,IAAK,EAAvC;AAEA,SAAO;AAACD,IAAAA;AAAD,GAAP;AACH,CARD;;AAUA,eAAeF,IAAf","sourcesContent":["import Layout from '../../components/MyLayout';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Markdown from 'react-markdown';\r\n\r\nconst Post = props => (\r\n    <Layout>\r\n        <h1>{props.show.name}</h1>\r\n        <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\r\n        {props.show.image ? <img src={props.show.image.medium} /> : null}\r\n        <div className=\"markdown\">\r\n            <Markdown\r\n            source={`\r\n            This is our blog post.\r\n            Yes. We can have a [link](/link).\r\n            And we can have a title as well.\r\n            \r\n            ### This is a title\r\n            \r\n            And here's the content.\r\n            `}\r\n            />\r\n        </div>\r\n<style jsx global>{`\r\n    .markdown {\r\n        font-family: 'Arial';\r\n    }\r\n\r\n    .markdown a {\r\n        text-decoration: none;\r\n        color: blue;\r\n    }\r\n\r\n    .markdown h3 {\r\n        margin: 0;\r\n        padding: 0;\r\n        text-transform: uppercase;\r\n    }\r\n`}</style>\r\n    </Layout>\r\n);\r\n\r\nPost.getInitialProps = async function(context) {\r\n    const {id} = context.query;\r\n    const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\r\n    const show = await res.json();\r\n\r\n    console.log(`Fetched show: ${show.name}`);\r\n\r\n    return {show};\r\n};\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}