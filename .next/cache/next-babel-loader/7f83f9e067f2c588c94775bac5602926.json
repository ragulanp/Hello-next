{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Ragu\\\\Desktop\\\\Utvikling\\\\hello-next\\\\pages\\\\p\\\\[id].js\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Markdown from 'react-markdown';\n\nvar Post = function Post(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-1678944718\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, props.show.name), __jsx(\"p\", {\n    className: \"jsx-1678944718\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, props.show.summary.replace(/<[/]?[pb]>/g, '')), props.show.image ? __jsx(\"img\", {\n    src: props.show.image.medium,\n    className: \"jsx-1678944718\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 29\n    }\n  }) : null, __jsx(\"div\", {\n    className: \"jsx-1678944718\" + \" \" + \"markdown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, __jsx(Markdown, {\n    source: \"\\n            This is our blog post.\\n            Yes. We can have a [link](/link).\\n            And we can have a title as well.\\n            \\n            ### This is a title\\n            \\n            And here's the content.\\n            \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  })), __jsx(_JSXStyle, {\n    id: \"1678944718\",\n    __self: _this\n  }, \".markdown{font-family:'Arial';}.markdown a{-webkit-text-decoration:none;text-decoration:none;color:blue;}.markdown a:hover{opacity:0.6;}.markdown h3{margin:0;padding:0;text-transform:uppercase;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcUmFndVxcRGVza3RvcFxcVXR2aWtsaW5nXFxoZWxsby1uZXh0XFxwYWdlc1xccFxcW2lkXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzQm1CLEFBRzZCLEFBSUMsQUFLVCxBQUlILFNBQ0MsR0FKZCxPQUs2QixDQWQ3Qix3QkFlQSxNQVhlLFdBQ2YiLCJmaWxlIjoiQzpcXFVzZXJzXFxSYWd1XFxEZXNrdG9wXFxVdHZpa2xpbmdcXGhlbGxvLW5leHRcXHBhZ2VzXFxwXFxbaWRdLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExheW91dCBmcm9tICcuLi8uLi9jb21wb25lbnRzL015TGF5b3V0JztcclxuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XHJcbmltcG9ydCBNYXJrZG93biBmcm9tICdyZWFjdC1tYXJrZG93bic7XHJcblxyXG5jb25zdCBQb3N0ID0gcHJvcHMgPT4gKFxyXG4gICAgPExheW91dD5cclxuICAgICAgICA8aDE+e3Byb3BzLnNob3cubmFtZX08L2gxPlxyXG4gICAgICAgIDxwPntwcm9wcy5zaG93LnN1bW1hcnkucmVwbGFjZSgvPFsvXT9bcGJdPi9nLCAnJyl9PC9wPlxyXG4gICAgICAgIHtwcm9wcy5zaG93LmltYWdlID8gPGltZyBzcmM9e3Byb3BzLnNob3cuaW1hZ2UubWVkaXVtfSAvPiA6IG51bGx9XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXJrZG93blwiPlxyXG4gICAgICAgICAgICA8TWFya2Rvd25cclxuICAgICAgICAgICAgc291cmNlPXtgXHJcbiAgICAgICAgICAgIFRoaXMgaXMgb3VyIGJsb2cgcG9zdC5cclxuICAgICAgICAgICAgWWVzLiBXZSBjYW4gaGF2ZSBhIFtsaW5rXSgvbGluaykuXHJcbiAgICAgICAgICAgIEFuZCB3ZSBjYW4gaGF2ZSBhIHRpdGxlIGFzIHdlbGwuXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAjIyMgVGhpcyBpcyBhIHRpdGxlXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBBbmQgaGVyZSdzIHRoZSBjb250ZW50LlxyXG4gICAgICAgICAgICBgfVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgIDwvZGl2PlxyXG48c3R5bGUganN4IGdsb2JhbD57YFxyXG4gICAgLm1hcmtkb3duIHtcclxuICAgICAgICBmb250LWZhbWlseTogJ0FyaWFsJztcclxuICAgIH1cclxuXHJcbiAgICAubWFya2Rvd24gYSB7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIGNvbG9yOiBibHVlO1xyXG4gICAgfVxyXG5cclxuICAgIC5tYXJrZG93biBhOmhvdmVyIHtcclxuICAgICAgICBvcGFjaXR5OiAwLjY7XHJcbiAgICB9XHJcblxyXG4gICAgLm1hcmtkb3duIGgzIHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgfVxyXG5gfTwvc3R5bGU+XHJcbiAgICA8L0xheW91dD5cclxuKTtcclxuXHJcblBvc3QuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24oY29udGV4dCkge1xyXG4gICAgY29uc3Qge2lkfSA9IGNvbnRleHQucXVlcnk7XHJcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9hcGkudHZtYXplLmNvbS9zaG93cy8ke2lkfWApO1xyXG4gICAgY29uc3Qgc2hvdyA9IGF3YWl0IHJlcy5qc29uKCk7XHJcblxyXG4gICAgY29uc29sZS5sb2coYEZldGNoZWQgc2hvdzogJHtzaG93Lm5hbWV9YCk7XHJcblxyXG4gICAgcmV0dXJuIHtzaG93fTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBvc3Q7Il19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Ragu\\\\\\\\Desktop\\\\\\\\Utvikling\\\\\\\\hello-next\\\\\\\\pages\\\\\\\\p\\\\\\\\[id].js */\"));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, res, show;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/shows/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          show = _context.sent;\n          console.log(\"Fetched show: \".concat(show.name));\n          return _context.abrupt(\"return\", {\n            show: show\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/Ragu/Desktop/Utvikling/hello-next/pages/p/[id].js"],"names":["Layout","fetch","Markdown","Post","props","show","name","summary","replace","image","medium","getInitialProps","context","id","query","res","json","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SACd,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAN,CAAWC,IAAhB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACC,IAAN,CAAWE,OAAX,CAAmBC,OAAnB,CAA2B,aAA3B,EAA0C,EAA1C,CAAJ,CAFJ,EAGKJ,KAAK,CAACC,IAAN,CAAWI,KAAX,GAAmB;AAAK,IAAA,GAAG,EAAEL,KAAK,CAACC,IAAN,CAAWI,KAAX,CAAiBC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,GAA2D,IAHhE,EAII;AAAA,wCAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AACA,IAAA,MAAM,qPADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ;AAAA;AAAA;AAAA,ioFADc;AAAA,CAAlB;;AAyCAP,IAAI,CAACQ,eAAL,GAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,UAAAA,EADY,GACND,OAAO,CAACE,KADF,CACZD,EADY;AAAA;AAAA,2CAEDZ,KAAK,wCAAiCY,EAAjC,EAFJ;;AAAA;AAEbE,UAAAA,GAFa;AAAA;AAAA,2CAGAA,GAAG,CAACC,IAAJ,EAHA;;AAAA;AAGbX,UAAAA,IAHa;AAKnBY,UAAAA,OAAO,CAACC,GAAR,yBAA6Bb,IAAI,CAACC,IAAlC;AALmB,2CAOZ;AAACD,YAAAA,IAAI,EAAJA;AAAD,WAPY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAUA,eAAeF,IAAf","sourcesContent":["import Layout from '../../components/MyLayout';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Markdown from 'react-markdown';\r\n\r\nconst Post = props => (\r\n    <Layout>\r\n        <h1>{props.show.name}</h1>\r\n        <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\r\n        {props.show.image ? <img src={props.show.image.medium} /> : null}\r\n        <div className=\"markdown\">\r\n            <Markdown\r\n            source={`\r\n            This is our blog post.\r\n            Yes. We can have a [link](/link).\r\n            And we can have a title as well.\r\n            \r\n            ### This is a title\r\n            \r\n            And here's the content.\r\n            `}\r\n            />\r\n        </div>\r\n<style jsx global>{`\r\n    .markdown {\r\n        font-family: 'Arial';\r\n    }\r\n\r\n    .markdown a {\r\n        text-decoration: none;\r\n        color: blue;\r\n    }\r\n\r\n    .markdown a:hover {\r\n        opacity: 0.6;\r\n    }\r\n\r\n    .markdown h3 {\r\n        margin: 0;\r\n        padding: 0;\r\n        text-transform: uppercase;\r\n    }\r\n`}</style>\r\n    </Layout>\r\n);\r\n\r\nPost.getInitialProps = async function(context) {\r\n    const {id} = context.query;\r\n    const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\r\n    const show = await res.json();\r\n\r\n    console.log(`Fetched show: ${show.name}`);\r\n\r\n    return {show};\r\n};\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}