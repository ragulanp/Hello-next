{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ragu\\\\Desktop\\\\Utvikling\\\\hello-next\\\\pages\\\\index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/*import Layout from '../components/MyLayout';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\n*/\n\n/*const PostLink = props => (\r\n    <li>\r\n        <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\r\n            <a>{props.id}</a>\r\n        </Link>\r\n    </li>\r\n);\r\n\r\nexport default function Blog() {\r\n    return (\r\n    <Layout>\r\n        <h1>My Blog</h1>\r\n        <ul>\r\n            <PostLink id=\"hello-nextjs\" />\r\n            <PostLink id=\"learn-nextjs\" />\r\n            <PostLink id=\"deploy-nextjs\" />\r\n        </ul>\r\n        <p>Hello Next.js</p>\r\n    </Layout>\r\n    );\r\n}*/\n\n/*const Index = props => (\r\n    <Layout>\r\n        <h1>Batman TV Shows</h1>\r\n        <ul>\r\n            {props.shows.map(show => (\r\n                <li key={show.id}>\r\n                    <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\r\n                        <a>{show.name}</a>\r\n                    </Link>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n            <style jsx>{`\r\n                h1,\r\n                a {\r\n                    font-family: 'Arial';\r\n                }\r\n\r\n                ul {\r\n                    padding: 0;\r\n                }\r\n\r\n                li {\r\n                    list-style: none;\r\n                    margin: 5px 0;\r\n                }\r\n\r\n                a {\r\n                    text-decoration: none;\r\n                    color: blue;\r\n                }\r\n\r\n                a:hover {\r\n                    opacity: 0.6;\r\n                }\r\n            `}</style>\r\n    </Layout>\r\n);\r\n\r\nIndex.getInitialProps = async function() {\r\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\r\n    const data = await res.json();\r\n\r\n    console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n    return {\r\n        shows: data.map(entry => entry.show)\r\n    };\r\n};\r\n\r\nexport default Index;\r\n*/\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(function (r) {\n    return r.json();\n  });\n}\n\nexport default function Index() {\n  var _useeRouter = useeRouter(),\n      query = _useeRouter.query;\n\n  var _useSWR = useSWR(\"/api/randomQuote\".concat(query.author ? '?author=' + query.author : ''), fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  var author = data === null || data === void 0 ? void 0 : data.author;\n  var quote = data === null || data === void 0 ? void 0 : data.quote;\n  if (!data) quote = 'Loading...';\n  if (error) quote = 'Failed to fetch the quote.';\n  return __jsx(\"main\", {\n    className: \"jsx-321569281\" + \" \" + \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-321569281\" + \" \" + \"quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, quote), author && __jsx(\"span\", {\n    className: \"jsx-321569281\" + \" \" + \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 24\n    }\n  }, \"- \", author), __jsx(_JSXStyle, {\n    id: \"321569281\",\n    __self: this\n  }, \"main.jsx-321569281{width:90%;max-width:900px;margin:300px auto;text-align:center;}.quote.jsx-321569281{font-family:cursive;color:#e243de;font-size:24px;padding-bottom:10px;}.author.jsx-321569281{font-family:sans-serif;color:#559834;font-size:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcUmFndVxcRGVza3RvcFxcVXR2aWtsaW5nXFxoZWxsby1uZXh0XFxwYWdlc1xcaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0d3QixBQUcyQixBQU1VLEFBTUcsVUFYUCxVQU1GLEdBTUEsR0FYSSxRQU1ILEdBTUEsT0FYRyxLQU1FLEdBTXBCLFVBWEEsT0FNQSIsImZpbGUiOiJDOlxcVXNlcnNcXFJhZ3VcXERlc2t0b3BcXFV0dmlrbGluZ1xcaGVsbG8tbmV4dFxccGFnZXNcXGluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyppbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTXlMYXlvdXQnO1xyXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xyXG5pbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJztcclxuKi9cclxuXHJcbi8qY29uc3QgUG9zdExpbmsgPSBwcm9wcyA9PiAoXHJcbiAgICA8bGk+XHJcbiAgICAgICAgPExpbmsgaHJlZj1cIi9wL1tpZF1cIiBhcz17YC9wLyR7cHJvcHMuaWR9YH0+XHJcbiAgICAgICAgICAgIDxhPntwcm9wcy5pZH08L2E+XHJcbiAgICAgICAgPC9MaW5rPlxyXG4gICAgPC9saT5cclxuKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEJsb2coKSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgPExheW91dD5cclxuICAgICAgICA8aDE+TXkgQmxvZzwvaDE+XHJcbiAgICAgICAgPHVsPlxyXG4gICAgICAgICAgICA8UG9zdExpbmsgaWQ9XCJoZWxsby1uZXh0anNcIiAvPlxyXG4gICAgICAgICAgICA8UG9zdExpbmsgaWQ9XCJsZWFybi1uZXh0anNcIiAvPlxyXG4gICAgICAgICAgICA8UG9zdExpbmsgaWQ9XCJkZXBsb3ktbmV4dGpzXCIgLz5cclxuICAgICAgICA8L3VsPlxyXG4gICAgICAgIDxwPkhlbGxvIE5leHQuanM8L3A+XHJcbiAgICA8L0xheW91dD5cclxuICAgICk7XHJcbn0qL1xyXG5cclxuLypjb25zdCBJbmRleCA9IHByb3BzID0+IChcclxuICAgIDxMYXlvdXQ+XHJcbiAgICAgICAgPGgxPkJhdG1hbiBUViBTaG93czwvaDE+XHJcbiAgICAgICAgPHVsPlxyXG4gICAgICAgICAgICB7cHJvcHMuc2hvd3MubWFwKHNob3cgPT4gKFxyXG4gICAgICAgICAgICAgICAgPGxpIGtleT17c2hvdy5pZH0+XHJcbiAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9wL1tpZF1cIiBhcz17YC9wLyR7c2hvdy5pZH1gfT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGE+e3Nob3cubmFtZX08L2E+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxyXG4gICAgICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgKSl9XHJcbiAgICAgICAgPC91bD5cclxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgICAgICAgICAgaDEsXHJcbiAgICAgICAgICAgICAgICBhIHtcclxuICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogJ0FyaWFsJztcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICB1bCB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBsaSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDVweCAwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGEge1xyXG4gICAgICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogYmx1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBhOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjY7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9PC9zdHlsZT5cclxuICAgIDwvTGF5b3V0PlxyXG4pO1xyXG5cclxuSW5kZXguZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24oKSB7XHJcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9hcGkudHZtYXplLmNvbS9zZWFyY2gvc2hvd3M/cT1iYXRtYW4nKTtcclxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKGBTaG93IGRhdGEgZmV0Y2hlZC4gQ291bnQ6ICR7ZGF0YS5sZW5ndGh9YCk7XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBzaG93czogZGF0YS5tYXAoZW50cnkgPT4gZW50cnkuc2hvdylcclxuICAgIH07XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBJbmRleDtcclxuKi9cclxuXHJcbmltcG9ydCB7dXNlUm91dGVyfSBmcm9tICduZXh0L3JvdXRlcic7XHJcbmltcG9ydCB1c2VTV1IgZnJvbSAnc3dyJztcclxuXHJcbmZ1bmN0aW9uIGZldGNoZXIodXJsKSB7XHJcbiAgICByZXR1cm4gZmV0Y2godXJsKS50aGVuKHIgPT4gci5qc29uKCkpO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJbmRleCgpIHtcclxuICAgIGNvbnN0IHtxdWVyeX0gPSB1c2VlUm91dGVyKCk7XHJcbiAgICBjb25zdCB7ZGF0YSwgZXJyb3J9ID0gdXNlU1dSKFxyXG4gICAgICAgIGAvYXBpL3JhbmRvbVF1b3RlJHtxdWVyeS5hdXRob3IgPyAnP2F1dGhvcj0nICsgcXVlcnkuYXV0aG9yIDogJyd9YCxcclxuICAgICAgICBmZXRjaGVyXHJcbiAgICApO1xyXG4gICAgY29uc3QgYXV0aG9yID0gZGF0YT8uYXV0aG9yO1xyXG4gICAgbGV0IHF1b3RlID0gZGF0YT8ucXVvdGU7XHJcblxyXG4gICAgaWYgKCFkYXRhKSBxdW90ZSA9ICdMb2FkaW5nLi4uJztcclxuICAgIGlmIChlcnJvcikgcXVvdGUgPSAnRmFpbGVkIHRvIGZldGNoIHRoZSBxdW90ZS4nO1xyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPG1haW4gY2xhc3NOYW1lPVwiY2VudGVyXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicXVvdGVcIj57cXVvdGV9PC9kaXY+XHJcbiAgICAgICAgICAgIHthdXRob3IgJiYgPHNwYW4gY2xhc3NOYW1lPVwiYXV0aG9yXCI+LSB7YXV0aG9yfTwvc3Bhbj59XHJcblxyXG4gICAgICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgICAgICAgICBtYWluIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDkwMHB4O1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAzMDBweCBhdXRvO1xyXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLnF1b3RlIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBjdXJzaXZlO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICNlMjQzZGU7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC5hdXRob3Ige1xyXG4gICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogIzU1OTgzNDtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH08L3N0eWxlPlxyXG4gICAgICAgIDwvbWFpbj5cclxuICAgICk7XHJcbn0iXX0= */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Ragu\\\\\\\\Desktop\\\\\\\\Utvikling\\\\\\\\hello-next\\\\\\\\pages\\\\\\\\index.js */\"));\n}","map":{"version":3,"sources":["C:/Users/Ragu/Desktop/Utvikling/hello-next/pages/index.js"],"names":["useRouter","useSWR","fetcher","url","fetch","then","r","json","Index","useeRouter","query","author","data","error","quote"],"mappings":";;;;;AAAA;;;;;AAKA;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA,SAAQA,SAAR,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GAAjB,CAAP;AACH;;AAED,eAAe,SAASC,KAAT,GAAiB;AAAA,oBACZC,UAAU,EADE;AAAA,MACrBC,KADqB,eACrBA,KADqB;;AAAA,gBAENT,MAAM,2BACLS,KAAK,CAACC,MAAN,GAAe,aAAaD,KAAK,CAACC,MAAlC,GAA2C,EADtC,GAExBT,OAFwB,CAFA;AAAA,MAErBU,IAFqB,WAErBA,IAFqB;AAAA,MAEfC,KAFe,WAEfA,KAFe;;AAM5B,MAAMF,MAAM,GAAGC,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAED,MAArB;AACA,MAAIG,KAAK,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,KAAlB;AAEA,MAAI,CAACF,IAAL,EAAWE,KAAK,GAAG,YAAR;AACX,MAAID,KAAJ,EAAWC,KAAK,GAAG,4BAAR;AAEX,SACI;AAAA,uCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,uCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CADJ,EAEKH,MAAM,IAAI;AAAA,uCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BA,MAA5B,CAFf;AAAA;AAAA;AAAA,muKADJ;AA0BH","sourcesContent":["/*import Layout from '../components/MyLayout';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\n*/\r\n\r\n/*const PostLink = props => (\r\n    <li>\r\n        <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\r\n            <a>{props.id}</a>\r\n        </Link>\r\n    </li>\r\n);\r\n\r\nexport default function Blog() {\r\n    return (\r\n    <Layout>\r\n        <h1>My Blog</h1>\r\n        <ul>\r\n            <PostLink id=\"hello-nextjs\" />\r\n            <PostLink id=\"learn-nextjs\" />\r\n            <PostLink id=\"deploy-nextjs\" />\r\n        </ul>\r\n        <p>Hello Next.js</p>\r\n    </Layout>\r\n    );\r\n}*/\r\n\r\n/*const Index = props => (\r\n    <Layout>\r\n        <h1>Batman TV Shows</h1>\r\n        <ul>\r\n            {props.shows.map(show => (\r\n                <li key={show.id}>\r\n                    <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\r\n                        <a>{show.name}</a>\r\n                    </Link>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n            <style jsx>{`\r\n                h1,\r\n                a {\r\n                    font-family: 'Arial';\r\n                }\r\n\r\n                ul {\r\n                    padding: 0;\r\n                }\r\n\r\n                li {\r\n                    list-style: none;\r\n                    margin: 5px 0;\r\n                }\r\n\r\n                a {\r\n                    text-decoration: none;\r\n                    color: blue;\r\n                }\r\n\r\n                a:hover {\r\n                    opacity: 0.6;\r\n                }\r\n            `}</style>\r\n    </Layout>\r\n);\r\n\r\nIndex.getInitialProps = async function() {\r\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\r\n    const data = await res.json();\r\n\r\n    console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n    return {\r\n        shows: data.map(entry => entry.show)\r\n    };\r\n};\r\n\r\nexport default Index;\r\n*/\r\n\r\nimport {useRouter} from 'next/router';\r\nimport useSWR from 'swr';\r\n\r\nfunction fetcher(url) {\r\n    return fetch(url).then(r => r.json());\r\n}\r\n\r\nexport default function Index() {\r\n    const {query} = useeRouter();\r\n    const {data, error} = useSWR(\r\n        `/api/randomQuote${query.author ? '?author=' + query.author : ''}`,\r\n        fetcher\r\n    );\r\n    const author = data?.author;\r\n    let quote = data?.quote;\r\n\r\n    if (!data) quote = 'Loading...';\r\n    if (error) quote = 'Failed to fetch the quote.';\r\n\r\n    return (\r\n        <main className=\"center\">\r\n            <div className=\"quote\">{quote}</div>\r\n            {author && <span className=\"author\">- {author}</span>}\r\n\r\n            <style jsx>{`\r\n                main {\r\n                width: 90%;\r\n                max-width: 900px;\r\n                margin: 300px auto;\r\n                text-align: center;\r\n                }\r\n                .quote {\r\n                font-family: cursive;\r\n                color: #e243de;\r\n                font-size: 24px;\r\n                padding-bottom: 10px;\r\n                }\r\n                .author {\r\n                font-family: sans-serif;\r\n                color: #559834;\r\n                font-size: 20px;\r\n                }\r\n            `}</style>\r\n        </main>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}